{"version":3,"sources":["../src/comments.js"],"names":["scope","setOptions","breaks","gfm","sanitize","extendRenderer","instance","renderer","container","targetContainer","render","theme","defaultTheme","e","state","firstChild","replaceChild","appendChild","Comments","localStorage","getItem","token","setItem","oauthUri","redirect_uri","oauth","window","location","href","oauthParams","Object","assign","stringify","options","marked","id","title","document","link","desc","labels","user","userInfo","accessToken","JSON","parse","fromCache","removeItem","error","meta","comments","undefined","reactions","renderers","keys","forEach","query","code","client_id","client_secret","search","replacedUrl","origin","pathname","hash","history","replaceState","loginning","post","then","data","access_token","update","catch","alert","createIssue","load","Promise","all","loadMeta","loadUserInfo","loadReactions","owner","repo","concat","body","resolve","getIssue","issue","comments_url","get","creator","issues","length","reject","logout","url","loginLink","number","content","push","reaction","heart","index","findIndex","login","delete","splice","module","exports"],"mappings":"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","file":"comments.js","sourcesContent":["import marked from 'marked'\nimport { autorun, extendObservable, observable } from 'mobx'\n\nimport { LS_ACCESS_TOKEN_KEY, LS_USER_KEY, NOT_INITIALIZED_ERROR } from './constants'\nimport { getTargetContainer, http, Query } from './utils'\nimport defaultTheme from './theme/default'\n\nconst scope = 'repo'\n\nmarked.setOptions({\n  breaks: true,\n  gfm: true,\n  sanitize: true,\n})\n\nfunction extendRenderer(instance, renderer) {\n  instance[renderer] = (container) => {\n    const targetContainer = getTargetContainer(container)\n    const render = instance.theme[renderer] || instance.defaultTheme[renderer]\n\n    autorun(() => {\n      const e = render(instance.state, instance)\n      if (targetContainer.firstChild) {\n        targetContainer.replaceChild(e, targetContainer.firstChild)\n      } else {\n        targetContainer.appendChild(e)\n      }\n    })\n\n    return targetContainer\n  }\n}\n\nclass Comments {\n  get accessToken() {\n    return localStorage.getItem(LS_ACCESS_TOKEN_KEY)\n  }\n  set accessToken(token) {\n    localStorage.setItem(LS_ACCESS_TOKEN_KEY, token)\n  }\n\n  get loginLink() {\n    const oauthUri = 'https://github.com/login/oauth/authorize'\n    const redirect_uri = this.oauth.redirect_uri || window.location.href\n\n    const oauthParams = Object.assign({\n      scope,\n      redirect_uri,\n    }, this.oauth)\n\n    return `${oauthUri}${Query.stringify(oauthParams)}`\n  }\n\n  constructor(options = {}) {\n    Object.assign(this, {\n      marked,\n      defaultTheme,\n      id: window.location.href,\n      title: window.document.title,\n      link: window.location.href,\n      desc: '',\n      labels: [],\n      theme: defaultTheme,\n      oauth: {},\n    }, options)\n\n    const user = {}\n    try {\n      const userInfo = localStorage.getItem(LS_USER_KEY)\n      if (this.accessToken && userInfo) {\n        Object.assign(user, JSON.parse(userInfo), {\n          fromCache: true,\n        })\n      }\n    } catch (e) {\n      localStorage.removeItem(LS_USER_KEY)\n    }\n\n    this.state = observable({\n      user,\n      error: null,\n      meta: {},\n      comments: undefined,\n      reactions: [],\n    })\n\n    const renderers = Object.keys(this.theme)\n    renderers.forEach(renderer => extendRenderer(this, renderer))\n\n    const query = Query.parse()\n    if (query.code) {\n      const { client_id, client_secret } = this.oauth\n      const code = query.code\n      delete query.code\n      const search = Query.stringify(query)\n      const replacedUrl = `${window.location.origin}${window.location.pathname}${search}${window.location.hash}`\n      history.replaceState({}, '', replacedUrl)\n\n      Object.assign(this, {\n        id: replacedUrl,\n        link: replacedUrl,\n      }, options)\n\n      this.state.user.loginning = true\n      http.post('https://gh-oauth.imsun.net', {\n          code,\n          client_id,\n          client_secret,\n        }, '')\n        .then(data => {\n          this.accessToken = data.access_token\n          this.update()\n        })\n        .catch(e => {\n          this.user.loginning = false\n          alert(e)\n        })\n    } else {\n      this.update()\n    }\n  }\n\n  init() {\n    return this.createIssue()\n      .then(() => this.load())\n      .then(comments => {\n        this.state.error = null\n        return comments\n      })\n  }\n\n  update() {\n    return Promise.all([this.loadMeta(), this.loadUserInfo()])\n      .then(() => Promise.all([this.load(), this.loadReactions()]))\n      .catch(e => this.state.error = e)\n  }\n\n  createIssue() {\n    const { id, owner, repo, title, link, desc, labels } = this\n\n    return http.post(`/repos/${owner}/${repo}/issues`, {\n      title,\n      labels: labels.concat([id]),\n      body: `${link}\\n\\n${desc}`,\n    })\n      .then((meta) => {\n        this.state.meta = meta\n        return meta\n      })\n  }\n\n  getIssue() {\n    if (this.state.meta.id) return Promise.resolve(this.state.meta)\n\n    return this.loadMeta()\n  }\n\n  post(body) {\n    return this.getIssue()\n      .then(issue => http.post(issue.comments_url, { body }, ''))\n  }\n\n  loadMeta() {\n    const { id, owner, repo } = this\n    return http.get(`/repos/${owner}/${repo}/issues`, {\n        creator: owner,\n        labels: id,\n      })\n      .then(issues => {\n        if (!issues.length) return Promise.reject(NOT_INITIALIZED_ERROR)\n        this.state.meta = issues[0]\n        return issues[0]\n      })\n  }\n\n  load() {\n    return this.getIssue()\n      .then(issue => http.get(issue.comments_url, {}, ''))\n      .then((comments) => {\n        this.state.comments = comments\n        return comments\n      })\n  }\n\n  loadUserInfo() {\n    if (!this.accessToken) {\n      this.logout()\n      return Promise.resolve({})\n    }\n\n    return http.get('/user')\n      .then((user) => {\n        this.state.user = user\n        localStorage.setItem(LS_USER_KEY, JSON.stringify(user))\n        return user\n      })\n  }\n\n  loadReactions() {\n    if (!this.accessToken) return Promise.resolve([])\n\n    return this.getIssue()\n      .then(issue => http.get(issue.reactions.url, {}, ''))\n      .then((reactions) => {\n        this.state.reactions = reactions\n        return reactions\n      })\n  }\n\n  login() {\n    window.location.href = this.loginLink\n  }\n\n  logout() {\n    localStorage.removeItem(LS_ACCESS_TOKEN_KEY)\n    localStorage.removeItem(LS_USER_KEY)\n    this.state.user = {}\n  }\n\n  like() {\n    if (!this.accessToken) {\n      alert('Login to Like')\n      return Promise.reject()\n    }\n\n    const { owner, repo } = this\n\n    return http.post(`/repos/${owner}/${repo}/issues/${this.state.meta.number}/reactions`, {\n      content: 'heart',\n    })\n      .then(reaction => {\n        this.state.reactions.push(reaction)\n        this.state.meta.reactions.heart++\n      })\n  }\n\n  unlike() {\n    if (!this.accessToken) return Promise.reject()\n\n\n    const { user, reactions } = this.state\n    const index = reactions.findIndex(reaction => reaction.user.login === user.login)\n    return http.delete(`/reactions/${reactions[index].id}`)\n      .then(() => {\n        reactions.splice(index, 1)\n        this.state.meta.reactions.heart--\n      })\n  }\n}\n\nmodule.exports = Comments\n"]}